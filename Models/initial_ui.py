# %% auto 0
__all__ = []

# %% ui_testing.ipynb 1
from datetime import datetime

import streamlit as st

from streamlit_jupyter import StreamlitPatcher, tqdm


# %% ui_testing.ipynb 3
st.title("Legal Sense - Work in Progress")

# %% ui_testing.ipynb 4
st.write("Know the likeliness of your Legal text being generated by AI")

# %% ui_testing.ipynb 5
uploaded_file = st.file_uploader("Upload your Legal text file", type="pdf")

from pdf2docx import Converter
import docx
from tempfile import NamedTemporaryFile
import os

# function to extract text from docx file
# filename: temporary location to docx file
def getText(filename):
    doc = docx.Document(filename)
    fullText = []
    for para in doc.paragraphs:
        fullText.append(para.text)
    return '\n'.join(fullText)

content = ''
text_input = ''
filepath = ''


if uploaded_file is not None:
    with open(os.path.join("D:/Capstone/",uploaded_file.name),"wb") as f:
        f.write(uploaded_file.getbuffer())
        
        # Keeping the PDF's location in a separate variable
        filepath = os.path.join(r"D:/Capstone/",uploaded_file.name)
        
        # Maintaining the Document's path in a separate variable
        docx_file = r"D:/Capstone/temp.docx"
        
        # converting pdf to docx
        content = Converter(filepath)
        content.convert(docx_file)
        content.close()
        
        #extracting text from docx
        text_input = getText(docx_file)

# %% ui_testing.ipynb 6
import functioned_model as fm

def display_material(text_input):
    
    #Placeholder for NER extractions
    st.subheader("NER Extractions -- Coming Soon!")
    
    #Placeholder for input summary
    st.subheader("Input Summary -- Coming Soon!")
    
    #Placeholder for input visualizations
    st.subheader("Visualizations -- Coming Soon!")
    
    #Prediction results
    st.subheader("Input Text Classification")
    res = fm.classification(text_input)
    result = "{:.2f}".format(res[0] * 100)
    result_string = "The model predicts that this input was "+str(result)+" %" + " likely generated by AI"

    st.write(result_string)
    if res[1]:
        st.write("This input was generated by AI")
    else:
        st.write("This input was written by a human")

# %% ui_testing.ipynb 7
if text_input:
    display_material(text_input)

# %% ui_testing.ipynb 8
#deleting temporary files
if filepath:
    if os.path.exists(filepath):
        os.remove(filepath)
        os.remove(docx_file)
